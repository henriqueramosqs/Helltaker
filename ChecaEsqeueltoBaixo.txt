checaEsqueletoBaixo:
	li t0, 'E'				# E representa esqueleto no mapa
	bne t2, t0, baixoLivre2			# Checa se tem esqueleto, se não segue normalmente
	#Se tiver esqueleto e quadrado acima do esqueleto for "x", O Esqueleto morre
	lb t3, 10(t1)				#Armazena o quadrado à esquerda do esqueleto
	li t4, 'X'				#Armazena  "x" em t4
	beq t3,t4, MorteDoEsqueletoBaixo	# Se esweuelto estiver encurralado, ele morre
	sb t0, 10(t1)				# Se for esqueleto, muda a memória do quadrado à baixo para E
	li t0, '0'				# Carrega 0 que representa espaço vazio
	sb t0, 0(t1)				# Muda a memória no quadrado para espaço vazio

	jal calculaPosicaoFase2					# Desenha o tampão onde estava o esqueleto	
	drawImageNotImm(frame_zero, tampao_mapa_1, t1, t2)	
	jal calculaPosicaoFase2
	drawImageNotImm(frame_one, tampao_mapa_1, t1, t2)

	addi a6 a6, 1						# Sobe uma posição na matriz
	jal calculaPosicaoFase2					# Desenha o esqueleto
	drawImageNotImm(frame_zero, esqueleto, t1, t2)	
	jal calculaPosicaoFase2
	drawImageNotImm(frame_one, esqueleto, t1, t2)	
	addi a6, a6, -1						# Corrige a posição de volta para o personagem
MorteDoEsqueletoBaixo:
	sb zero, (t1)				# Se for pra morrer, muda a memória do quadrado do esqueleto pra 0
	jal calculaPosicaoFase2					# Desenha o tampão onde estava o esqueleto	
	drawImageNotImm(frame_zero, tampao_mapa_1, t1, t2)	
	jal calculaPosicaoFase2
	drawImageNotImm(frame_one, tampao_mapa_1, t1, t2)